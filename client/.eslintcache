[{"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\reportWebVitals.js":"1","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\App.js":"2","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\index.js":"3","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Cards\\Cards.js":"4","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Cards\\Card\\Card.js":"5","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\index.js":"6","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Chart\\Chart.js":"7","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Country\\CountryComp.js":"8","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Dashboard\\Dashboard.js":"9"},{"size":362,"mtime":1607380570528,"results":"10","hashOfConfig":"11"},{"size":1022,"mtime":1609219189758,"results":"12","hashOfConfig":"11"},{"size":232,"mtime":1609198170987,"results":"13","hashOfConfig":"11"},{"size":1221,"mtime":1609215785823,"results":"14","hashOfConfig":"11"},{"size":982,"mtime":1609212969443,"results":"15","hashOfConfig":"11"},{"size":500,"mtime":1609118433333,"results":"16","hashOfConfig":"11"},{"size":5999,"mtime":1609218858247,"results":"17","hashOfConfig":"11"},{"size":2263,"mtime":1609200681850,"results":"18","hashOfConfig":"11"},{"size":2873,"mtime":1609219045580,"results":"19","hashOfConfig":"11"},{"filePath":"20","messages":"21","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"17ajie9",{"filePath":"22","messages":"23","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"24"},{"filePath":"25","messages":"26","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"27","messages":"28","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"29","messages":"30","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"31","messages":"32","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"33","messages":"34","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"35"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"38","messages":"39","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\reportWebVitals.js",[],"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\App.js",["40","41","42","43","44"],"import React from 'react';\nimport styles from './App.module.css';\nimport { Dashboard } from './components';\nimport { \n  AppBar,\n  Toolbar,\n  Typography,\n  Button,\n  createMuiTheme, \n  Switch, \n  FormControlLabel, \n  ThemeProvider \n} from '@material-ui/core';\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nfunction App() {\n  const [darkMode, setDarkMode] = React.useState(true);\n\n  const theme = React.useMemo(\n    () =>\n      createMuiTheme({\n        palette: {\n          type: darkMode ? 'dark' : 'light',\n        },\n      }),\n    [darkMode],\n  );\n\n  const handleChange = (event) => {\n    setDarkMode(event.target.checked);\n  }\n\n  return (\n    <ThemeProvider theme={theme}>\n      <CssBaseline/>\n      <Dashboard />   \n      <FormControlLabel\n        control={\n          <Switch\n            checked={darkMode}\n            onChange={handleChange}\n            name=\"checkedB\"\n            color=\"primary\"\n          />\n        }\n        label=\"Light/Dark\"\n      />\n    </ThemeProvider>\n  );\n}\n\nexport default App;\n","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\index.js",[],"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Cards\\Cards.js",[],"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Cards\\Card\\Card.js",[],"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\index.js",[],"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Chart\\Chart.js",["45","46","47"],"import React from 'react';\r\nimport axios from 'axios';\r\nimport { Line, Bar } from 'react-chartjs-2';\r\nimport { Grid } from '@material-ui/core';\r\nimport styles from './Chart.module.css';\r\n\r\nconst api = 'https://covid19.mathdro.id/api';\r\n\r\nconst fetchDailyDataReducer = (state, action) => {\r\n    switch(action.type) {\r\n        case 'DAILY_DATA_FETCH_INIT':\r\n            return {\r\n                ...state,\r\n                isLoading: true,\r\n                isError: false,\r\n            };\r\n        case 'DAILY_DATA_FETCH_SUCCESS':\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: false,\r\n                data: action.payload\r\n            }\r\n        case 'DAILY_DATA_FETCH_FAILURE':\r\n            return {\r\n                ...state,\r\n                isLoading: false,\r\n                isError: true\r\n            }\r\n        default:\r\n            throw new Error();\r\n    }\r\n  }\r\n\r\nconst Chart = ({ data: { confirmed, recovered, deaths }, country}) => {\r\n\r\n    const [covidDailyData, dispatchCovidDailyData] = React.useReducer(\r\n        fetchDailyDataReducer,\r\n        { data: [], isLoading: false, isError: false }\r\n    )\r\n\r\n    const handleFetchCovidDailyData = React.useCallback(async () => {\r\n        dispatchCovidDailyData({ type: 'DAILY_DATA_FETCH_INIT' });\r\n        let url = `https://api.covidtracking.com/v1/us/daily.json`;\r\n        try {\r\n            const dailyInfo = await axios.get(url);\r\n            const info = dailyInfo.data.map(({ positive, recovered, death, dateChecked: date }) => ({ confirmed: positive, recovered, deaths: death, updatedTime: date }));\r\n            dispatchCovidDailyData({\r\n              type: 'DAILY_DATA_FETCH_SUCCESS',\r\n              payload: info.reverse()\r\n            });\r\n          } catch {\r\n            dispatchCovidDailyData({ type: 'DAILY_DATA_FETCH_FAILURE' });\r\n          }\r\n    },);\r\n    \r\n    React.useEffect(() => {\r\n        handleFetchCovidDailyData();\r\n    }, [])\r\n\r\n    const barChart = (\r\n        confirmed ? (\r\n            <Bar\r\n              data={{\r\n                labels: ['Infected', 'Recovered', 'Deaths'],\r\n                datasets: [\r\n                  {\r\n                    label: 'People',\r\n                    backgroundColor: ['rgba(0, 0, 255, 0.5)', 'rgba(0, 255, 0, 0.5)', 'rgba(255, 0, 0, 0.5)'],\r\n                    data: [confirmed.value, recovered.value, deaths.value],\r\n                  },\r\n                ],\r\n              }}\r\n              options={{\r\n                legend: { display: false },\r\n                title: { \r\n                  display: true, \r\n                  text: `Current state in ${country}`,\r\n                  fontSize: 24, \r\n                },\r\n              }}\r\n              />\r\n        ) : null\r\n    );\r\n              \r\n    const confirmedChart = (\r\n        covidDailyData.data ? (\r\n          <Line\r\n            data={{\r\n              labels: covidDailyData.data.map(({ updatedTime }) => new Date(updatedTime).toLocaleDateString()),\r\n              datasets: [{\r\n                data: covidDailyData.data.map((data) => data.confirmed),\r\n                label: 'Infected',\r\n                defaultFontSize: 24,\r\n                borderColor: '#3333ff',\r\n                fill: true,\r\n              },\r\n            ],\r\n            }}\r\n            options={{\r\n              legend: { display: true },\r\n              title: { \r\n                display: true, \r\n                text: `Confirmed Cases Worldwide: ${covidDailyData.data.length === 0 ? '' : covidDailyData.data[covidDailyData.data.length-1].confirmed}`,\r\n                fontSize: 24, \r\n              },\r\n            }}\r\n          />\r\n        ) : null\r\n    );\r\n\r\n    const deathChart = (\r\n      covidDailyData.data ? (\r\n        <Line\r\n          data={{\r\n            labels: covidDailyData.data.map(({ updatedTime }) => new Date(updatedTime).toLocaleDateString()),\r\n            datasets: [{\r\n              data: covidDailyData.data.map((data) => data.deaths),\r\n              label: 'Deaths',\r\n              borderColor: 'red',\r\n              backgroundColor: 'rgba(255, 0, 0, 0.5)',\r\n              fill: true,\r\n            },\r\n            ],\r\n          }}\r\n          options={{\r\n            legend: { display: true },\r\n            title: { \r\n              display: true, \r\n              text: `Number of Deaths Worldwide: ${covidDailyData.data.length === 0 ? '' : covidDailyData.data[covidDailyData.data.length-1].deaths}`,\r\n              fontSize: 24, \r\n            },\r\n          }}\r\n        />\r\n      ) : null\r\n  );\r\n\r\n  const recoveredChart = (\r\n    covidDailyData.data ? (\r\n      <Line\r\n        data={{\r\n          labels: covidDailyData.data.map(({ updatedTime }) => new Date(updatedTime).toLocaleDateString()),\r\n          datasets: [{\r\n            data: covidDailyData.data.map((data) => data.recovered),\r\n            label: 'Recovered',\r\n            borderColor: 'green',\r\n            backgroundColor: 'rgba(0, 255, 0, 0.5)',\r\n            fill: true,\r\n          },\r\n          ],\r\n        }}\r\n        options={{\r\n          legend: { display: true },\r\n          title: { \r\n            display: true, \r\n            text: `Recovered Cases: ${covidDailyData.data.length === 0 ? '' : covidDailyData.data[covidDailyData.data.length-1].recovered}`,\r\n            fontSize: 24, \r\n          },\r\n        }}\r\n      />\r\n    ) : null\r\n);\r\n\r\n\r\n    \r\n      return (\r\n        <div className={styles.container}>\r\n            <Grid container spacing={3}  justify=\"center\">\r\n              <Grid container item xs={12} spacing={3}>\r\n                {confirmedChart}\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                {deathChart}\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                {recoveredChart}\r\n              </Grid>\r\n              <Grid container item xs={12} spacing={3}>\r\n                {barChart}\r\n              </Grid>\r\n            </Grid>\r\n        </div>\r\n      );\r\n}\r\n\r\nexport default Chart;","C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Country\\CountryComp.js",[],"C:\\Users\\quynh\\OneDrive\\Desktop\\Covid.io\\client\\src\\components\\Dashboard\\Dashboard.js",[],{"ruleId":"48","severity":1,"message":"49","line":2,"column":8,"nodeType":"50","messageId":"51","endLine":2,"endColumn":14},{"ruleId":"48","severity":1,"message":"52","line":5,"column":3,"nodeType":"50","messageId":"51","endLine":5,"endColumn":9},{"ruleId":"48","severity":1,"message":"53","line":6,"column":3,"nodeType":"50","messageId":"51","endLine":6,"endColumn":10},{"ruleId":"48","severity":1,"message":"54","line":7,"column":3,"nodeType":"50","messageId":"51","endLine":7,"endColumn":13},{"ruleId":"48","severity":1,"message":"55","line":8,"column":3,"nodeType":"50","messageId":"51","endLine":8,"endColumn":9},{"ruleId":"48","severity":1,"message":"56","line":7,"column":7,"nodeType":"50","messageId":"51","endLine":7,"endColumn":10},{"ruleId":"57","severity":1,"message":"58","line":42,"column":39,"nodeType":"59","endLine":42,"endColumn":56},{"ruleId":"57","severity":1,"message":"60","line":59,"column":8,"nodeType":"61","endLine":59,"endColumn":10,"suggestions":"62"},"no-unused-vars","'styles' is defined but never used.","Identifier","unusedVar","'AppBar' is defined but never used.","'Toolbar' is defined but never used.","'Typography' is defined but never used.","'Button' is defined but never used.","'api' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useCallback does nothing when called with only one argument. Did you forget to pass an array of dependencies?","MemberExpression","React Hook React.useEffect has a missing dependency: 'handleFetchCovidDailyData'. Either include it or remove the dependency array.","ArrayExpression",["63"],{"desc":"64","fix":"65"},"Update the dependencies array to be: [handleFetchCovidDailyData]",{"range":"66","text":"67"},[1971,1973],"[handleFetchCovidDailyData]"]